--
-- PostgreSQL database cluster dump
--

SET default_transaction_read_only = off;

SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;

--
-- Roles
--

CREATE ROLE planereportupdater;
ALTER ROLE planereportupdater WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB LOGIN NOREPLICATION PASSWORD 'md5879655fbe580296526dcb025d47d4216';
CREATE ROLE postgres;
ALTER ROLE postgres WITH SUPERUSER INHERIT CREATEROLE CREATEDB LOGIN REPLICATION;






--
-- Database creation
--

CREATE DATABASE "PlaneReports" WITH TEMPLATE = template0 OWNER = postgres;
REVOKE ALL ON DATABASE template1 FROM PUBLIC;
REVOKE ALL ON DATABASE template1 FROM postgres;
GRANT ALL ON DATABASE template1 TO postgres;
GRANT CONNECT ON DATABASE template1 TO PUBLIC;


\connect "PlaneReports"

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: PlaneReports; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON DATABASE "PlaneReports" IS 'This will be used to store position reports from aircraft, details of airports that are within range, and details of reporting instances of dump1090';


--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: postgis; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS postgis WITH SCHEMA public;


--
-- Name: EXTENSION postgis; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION postgis IS 'PostGIS geometry, geography, and raster spatial types and functions';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: airport; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE airport (
    icao character(4),
    iata character(3),
    name character varying(50),
    city character varying(50),
    country character varying(50),
    altitude integer,
    location geography(Point,4326),
    runways geography(Polygon,4326)
);


ALTER TABLE airport OWNER TO postgres;

--
-- Name: COLUMN airport.icao; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN airport.icao IS '4 Letter code that uniquely identifies an airport';


--
-- Name: COLUMN airport.iata; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN airport.iata IS 'Old-fashioned 3 letter code that was used to identify airports';


--
-- Name: COLUMN airport.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN airport.name IS 'Name of the airport (e.g. Sydney International)';


--
-- Name: COLUMN airport.city; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN airport.city IS 'City the airport is located in';


--
-- Name: COLUMN airport.country; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN airport.country IS 'Country airport is in';


--
-- Name: COLUMN airport.altitude; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN airport.altitude IS 'Height of airport';


--
-- Name: COLUMN airport.location; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN airport.location IS 'A point containing the latitude longitude of the airport';


--
-- Name: planereports; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE planereports (
    hex character(6),
    squawk character(6),
    flight character(8),
    "isMetric" boolean,
    "isMLAT" boolean,
    altitude integer,
    speed integer,
    vert_rate integer,
    bearing integer,
    messages_sent integer,
    report_location geography(Point,4326),
    report_timestamp timestamp without time zone,
    report_epoch integer,
    reporter character(10)
);


ALTER TABLE planereports OWNER TO postgres;

--
-- Name: TABLE planereports; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE planereports IS 'Reports of a plane''s position.';


--
-- Name: COLUMN planereports.hex; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN planereports.hex IS 'ICAO24 code that uniquely identifies aircraft.';


--
-- Name: COLUMN planereports.squawk; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN planereports.squawk IS 'Code used by local air traffic controllers to communicate with the planes they are controllong.';


--
-- Name: COLUMN planereports.flight; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN planereports.flight IS 'Flight number assigned to aircraft for this particular route/time';


--
-- Name: COLUMN planereports."isMetric"; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN planereports."isMetric" IS 'Does this record have metric units (metres/kmh) for altitude & speed';


--
-- Name: COLUMN planereports."isMLAT"; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN planereports."isMLAT" IS 'Was this position report derived from multilateration';


--
-- Name: COLUMN planereports.altitude; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN planereports.altitude IS 'Height of aircraft';


--
-- Name: COLUMN planereports.speed; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN planereports.speed IS 'Speed of aircraft';


--
-- Name: COLUMN planereports.vert_rate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN planereports.vert_rate IS 'Rate of descent/ascent in metres/feet per minute';


--
-- Name: COLUMN planereports.bearing; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN planereports.bearing IS 'Direction aircraft is heading';


--
-- Name: COLUMN planereports.messages_sent; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN planereports.messages_sent IS 'Number of messages received from this aircraft at the time of this report';


--
-- Name: COLUMN planereports.report_location; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN planereports.report_location IS 'Encoded lat/lon of report (for use in postgis functions)';


--
-- Name: COLUMN planereports.report_timestamp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN planereports.report_timestamp IS 'When the report was issued.';


--
-- Name: COLUMN planereports.report_epoch; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN planereports.report_epoch IS 'Timestamp of report as seconds from epoch.';


--
-- Name: reporter; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE reporter (
    name character(10),
    type character(10),
    reporter_location geography(Point,4326),
    url character varying(256)
);


ALTER TABLE reporter OWNER TO postgres;

--
-- Name: hex_idx; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX hex_idx ON planereports USING btree (hex);


--
-- Name: planereports_report_timestamp_idx; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX planereports_report_timestamp_idx ON planereports USING btree (report_timestamp);


--
-- Name: rep_loc; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX rep_loc ON planereports USING gist (report_location);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- Name: airport; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE airport FROM PUBLIC;
REVOKE ALL ON TABLE airport FROM postgres;
GRANT ALL ON TABLE airport TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE airport TO planereportupdater;


--
-- Name: planereports; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE planereports FROM PUBLIC;
REVOKE ALL ON TABLE planereports FROM postgres;
GRANT ALL ON TABLE planereports TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE planereports TO planereportupdater;


--
-- Name: reporter; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE reporter FROM PUBLIC;
REVOKE ALL ON TABLE reporter FROM postgres;
GRANT ALL ON TABLE reporter TO postgres;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE reporter TO planereportupdater;


--
-- PostgreSQL database dump complete
--

\connect postgres

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: postgres; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON DATABASE postgres IS 'default administrative connection database';


--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

\connect template1

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: template1; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON DATABASE template1 IS 'default template for new databases';


--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database cluster dump complete
--

